---
title: "Meta-analysis - Outdoor air pollution and development of adult asthma (rev. 2024.02.12)"
author: "Spencer Lee"
date: "02/12/2023"
format:
  html:
    code-fold: false
editor: 
  markdown: 
    wrap: 72
---

# Importing dependencies: meta package, here, and dpylr. Optional (for studymap): tmap, rnaturalearth, and rnaturalearthdata
```{r}
library(meta)
library(here)
library(dplyr)

#For study map 
library(tmap)
library(rnaturalearth)
library(rnaturalearthdata)
```

# Source of functions for later.
```{r}
source(here("ma_fx.R"))
```

# Reading CSV file of study effect size data.
```{r}
ma <- read.csv(here("data", "study_data.csv"), header = T, sep = ",")
```


## Filtering PM2.5 and NO2 dataframes and data manipulation
```{r}
# PM2.5
ma.PM25.all <- ma %>%
    filter(pollutant == "PM2.5") %>%
    mutate(log.EE = log(ee)) %>%
    mutate(log.SE = (log(up95)-log(low95))/3.92) %>%
    mutate(alog.EE = adjIncPM(log.EE, increment)) %>%
    mutate(alog.SE = adjIncPM(log.SE, increment)) %>%
    mutate(log.rEE = log(rrConvert(unit, ee, incidence))) %>%
    mutate(log.rSE = (log(rrConvert(unit, up95, incidence)) - log(rrConvert(unit, low95, incidence)))/3.92) %>%
    mutate(alog.rEE = adjIncPM(log.rEE, increment)) %>%
    mutate(alog.rSE = adjIncPM(log.rSE, increment))

# NO2
ma.NO2.all <- ma %>%
    filter(pollutant == "NO2") %>%
    mutate(log.EE = log(ee)) %>%
    mutate(log.SE = (log(up95)-log(low95))/3.92) %>%
    mutate(alog.EE = adjIncNO(log.EE, increment)) %>%
    mutate(alog.SE = adjIncNO(log.SE, increment)) %>%
    mutate(log.rEE = log(rrConvert(unit, ee, incidence))) %>%
    mutate(log.rSE = (log(rrConvert(unit, up95, incidence)) - log(rrConvert(unit, low95, incidence)))/3.92) %>%
    mutate(alog.rEE = adjIncNO(log.rEE, increment)) %>%
    mutate(alog.rSE = adjIncNO(log.rSE, increment))


# O3
ma.O3.all <- ma %>%
 filter(pollutant == "O3") %>%
    mutate(log.EE = log(ee)) %>%
    mutate(log.SE = (log(up95)-log(low95))/3.92) %>%
    mutate(alog.EE = adjIncO(log.EE, increment)) %>%
    mutate(alog.SE = adjIncO(log.SE, increment)) %>%
    mutate(log.rEE = log(rrConvert(unit, ee, incidence))) %>%
    mutate(log.rSE = (log(rrConvert(unit, up95, incidence)) - log(rrConvert(unit, low95, incidence)))/3.92) %>%
    mutate(alog.rEE = adjIncO(log.rEE, increment)) %>%
    mutate(alog.rSE = adjIncO(log.rSE, increment))

```

# Performing meta-analysis
## 1 - Effect size estimates (fully adjusted), sanity check
```{r}
pm1 <- meta_analyze_1(ma.PM25.all, "Step 1 - PM2.5")
no1 <- meta_analyze_1(ma.NO2.all, "Step 1 - NO2")
o1 <- meta_analyze_1(ma.O3.all, "Step 1 - O3")

```
## 2 - Effect size estimates (fully adjusted), standardized to increment (PM2.5: 5ug/m^3, NO2: 10 ug/m^3, O3: 60 ug/m^3)
```{r}
pm2 <- meta_analyze_2(ma.PM25.all, "Step 2 - PM2.5")
no2 <- meta_analyze_2(ma.NO2.all, "Step 2 - NO2")
o2 <- meta_analyze_2(ma.O3.all, "Step 2 - O3")
```
## 3 - Effect size estimates (fully adjusted), converted to relative risk, standardized to increment (PM2.5: 5ug/m^3, NO2: 10 ug/m^3, O3: 60 ug/m^3)
```{r}
pm3 <- meta_analyze_3(ma.PM25.all, "Step 3 - PM2.5")
no3 <- meta_analyze_3(ma.NO2.all, "Step 3 - NO2")
o3 <- meta_analyze_3(ma.O3.all, "Step 3 - O3")
```

# Funnel plots
```{r}
pm3_fun <- fun(pm3, FALSE)
no3_fun <- fun(no3, FALSE)
o3_fun <- fun(o3, FALSE)

pdf(file = "pm3funnel.pdf", width = 11, height = 6)
fun(pm3, FALSE)
dev.off()

pdf(file = "no3funnel.pdf", width = 11, height = 6)
fun(no3, FALSE)
dev.off()


pdf(file = "o3funnel.pdf", width = 11, height = 6)
fun(o3, FALSE)
dev.off()

```

## Funnel plots - Begg's test
```{r}
pm3_bias <- funBias(pm3)
no3_bias <- funBias(no3)
o3_bias <- funBias(o3)

pm3_bias
no3_bias
o3_bias
```

# Printing forest plots
```{r}
# Step 1 (sanity check):
pm1f <- forest_rev5(pm1, 0.5, 2)
no1f <- forest_rev5(no1, 0.1, 11)
o1f <- forest_rev5(o1, 0.2, 6)

# Step 2 (supplement figure)
pm2f <- forest_rev5(pm2, 0.5, 2)
no2f <- forest_rev5(no2, 0.1, 11)
o2f <- forest_rev5(o2, 0.2, 6)

# Step 3 (For in text figure)
pm3fr <- forest_rev5(pm3, 0.5, 2)
no3fr <- forest_rev5(no3, 0.1, 11)
o3fr <- forest_rev5(o3, 0.2, 6)
```

# Saving forest plots
```{r}
#
pdf(file = "pm2fr.pdf", width = 11, height = 6)
forest_rev5(pm2, 0.5, 2)
dev.off()


pdf(file = "no2fr.pdf", width = 11, height = 6)
forest_rev5(no2, 0.1, 15)
dev.off()

pdf(file = "o2fr.pdf", width = 11, height = 6)
forest_rev5(o2, 0.1, 10)
dev.off()


pdf(file = "pm3fr.pdf", width = 11, height = 6)
forest_rev5(pm3, 0.5, 2)
dev.off()

pdf(file = "no3fr.pdf", width = 11, height = 6)
forest_rev5(no3, 0.1, 15)
dev.off()

pdf(file = "o3fr.pdf", width = 11, height = 6)
forest_rev5(o3, 0.1, 10)
dev.off()
```


# Meta-regression
```{r}
pm_reg_exp <- mregExp(pm3)
no_reg_exp <- mregExp(no3)
o_reg_exp <- mregExp(o3)

pm_reg_all <- mregAll(pm3)
no_reg_all <- mregAll(no3)
o_reg_all <- mregAll(o3)

pm_reg_exp
no_reg_exp
o_reg_exp
pm_reg_all
no_reg_all
o_reg_all
```

# World map visualizations (study level country representation)
```{r}
world_study <- read.csv(here("data", "world_study.csv"), header = T, sep = ",")
country_count <- as.data.frame(table(world_study$Setting))
colnames(country_count) <- c("country", "study_count")
world_1 <- merge(world, country_count, by.x = "name", by.y = "country", all.x = TRUE)

study_palette <- colorRampPalette(c("lightblue", "blue"))(5)

tmap_mode("plot")
tmap_style("white")
world_studies <- tm_shape(world_1) +
  tm_fill(col = "study_count", 
          palette = study_palette, 
          style = "fixed", breaks = c(1,2,3,4,5),
          legend.show = TRUE,
          title = "Study Count") +
          tm_borders(col = "grey", lwd = 0.5)
world_studies

tmap_save(world_studies, "world_studies.svg", device = svglite::svglite)
```